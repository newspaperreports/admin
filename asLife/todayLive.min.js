// ✅ Pop-up Notification Script with License & Domain Validation

// 🔗 JSON Configuration URL (your data source for popup)
const jsonUrl = "https://raw.githubusercontent.com/newspaperreports/admin/asLife/todayLive.json";

// ⏱️ Popup close button delay (ms)
const closeBtnDelay = 3000;

// ⏱️ Auto close popup after delay (ms)
const autoCloseDelay = 20000;

// ✅ Function: Check if the current domain and license key are valid
function isLicenseValid(data) {
  const currentDomain = window.location.hostname.replace('www.', '');
  return (
    data.allowedDomains &&
    data.allowedDomains.includes(currentDomain) &&
    data.licenseKey === "NewspaperReports-AS - Life Official"
  );
}

// 🚨 Function: Report license misuse via email
function reportLicenseViolation(data) {
  const adminEmail = data.notification || "asupdatemedia518@gmail.com";
  const subject = encodeURIComponent("🚨 লাইসেন্স ছাড়া PopUp ব্যবহারের চেষ্টা");
  const body = encodeURIComponent(
    `❌ লাইসেন্স চেক ব্যর্থ!\n\n🌐 Current Domain: ${window.location.hostname}\n🕓 Time: ${new Date().toLocaleString()}\n\nJSON Info:\n${JSON.stringify(data, null, 2)}`
  );

  // 📤 Open mail client with filled content
  window.open(`mailto:${adminEmail}?subject=${subject}&body=${body}`, "_blank");
}

// 🔐 Base64 encode for identifier comparison
function utf8ToBase64(str) {
  return btoa(unescape(encodeURIComponent(str)));
}

// 🗃️ Global variables to track state
let currentPopupId = null;
let enableConsoleLog = true;

// 🚀 Main loader on window load
window.onload = function () {
  loadNotificationData();

  // ✋ Close button event listener
  const closeBtn = document.getElementById("popupCloseBtn");
  if (closeBtn) {
    closeBtn.addEventListener("click", () => {
      localStorage.setItem("popup_closed_by_user", "1");
      localStorage.setItem("popup_last_seen_id", currentPopupId);
      handleCloseOrVisit();
    });
  }

  // 🔁 Reload data every 30 seconds
  setInterval(loadNotificationData, 30000);
};

// 📥 Fetch and process notification data from JSON
async function loadNotificationData() {
  try {
    const response = await fetch(jsonUrl);
    if (!response.ok) throw new Error("Data load failed");
    const data = await response.json();

    // 🔐 Validate license and domain
    if (!isLicenseValid(data)) {
      console.warn("❌ লাইসেন্স চেক ব্যর্থ");
      reportLicenseViolation(data);
      return;
    }

    // 🚫 Stop if status is off
    if (data.status?.toLowerCase() === "off") return;

    enableConsoleLog = !(data.console?.toLowerCase() === "off");

    const identifier = `${data.link}|${data.title}|${data.image}`;
    const encodedIdentifier = utf8ToBase64(identifier);
    currentPopupId = encodedIdentifier;

    const lastSeen = localStorage.getItem("popup_last_seen_id");
    const popupClosedByUser = localStorage.getItem("popup_closed_by_user");
    const popup = document.getElementById("adminNotification");

    if (popup?.style.display === "block") {
      if (lastSeen !== encodedIdentifier) {
        handleCloseOrVisit(() => {
          showNotificationFromJSON(data, encodedIdentifier);
        });
      }
      return;
    }

    if (lastSeen === encodedIdentifier && popupClosedByUser === "1") return;

    showNotificationFromJSON(data, encodedIdentifier);
  } catch (e) {
    console.error("Notification loading error:", e);
  }
}

// 📤 Display popup based on JSON content
function showNotificationFromJSON(data, encodedIdentifier) {
  const popup = document.getElementById("adminNotification");

  document.getElementById("popupImg").src = data.image;
  document.getElementById("popupImgSrc").srcset = data.image;
  document.getElementById("popupTitle").textContent = data.title;
  document.getElementById("popupBtn").querySelector("span").textContent = data.buttonText;

  // 🔗 Handle button click
  const oldLinkEl = document.getElementById("popupLink");
  const newLinkEl = oldLinkEl.cloneNode(true);
  oldLinkEl.parentNode.replaceChild(newLinkEl, oldLinkEl);
  newLinkEl.href = data.link;
  newLinkEl.addEventListener("click", (e) => {
    e.preventDefault();
    localStorage.setItem("popup_last_seen_id", encodedIdentifier);
    localStorage.setItem("popup_closed_by_user", "1");
    window.open(data.link, "_blank");
    handleCloseOrVisit();
  });

  popup.style.display = "block";
  popup.classList.remove("fade-out");
  void popup.offsetWidth;
  popup.classList.add("fade-in");

  // ⏱️ Show close button after delay
  setTimeout(() => {
    const closeBtn = document.getElementById("popupCloseBtn");
    if (closeBtn) closeBtn.classList.add("show");
  }, closeBtnDelay);

  // ⏱️ Auto close popup after delay
  setTimeout(() => {
    if (popup.style.display === "block") {
      handleCloseOrVisit();
    }
  }, autoCloseDelay);
}

// ❌ Close popup smoothly
function handleCloseOrVisit(callback) {
  const popup = document.getElementById("adminNotification");
  const closeBtn = document.getElementById("popupCloseBtn");
  if (closeBtn) closeBtn.classList.remove("show");

  popup.classList.remove("fade-in");
  popup.classList.add("fade-out");

  setTimeout(() => {
    popup.style.display = "none";
    if (typeof callback === "function") callback();
  }, 300);
}
