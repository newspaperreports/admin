/**
 * Auto Admin Notification Popup Embed Script
 * - ‡¶Ø‡ßá‡¶ï‡ßã‡¶®‡ßã ‡¶™‡ßá‡¶ú‡ßá ‡¶è‡¶á ‡¶∏‡ßç‡¶ï‡ßç‡¶∞‡¶ø‡¶™‡ßç‡¶ü ‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡¶≤‡ßá‡¶á ‡¶ö‡¶≤‡ßá
 * - DOM-‡¶è #adminNotification ‡¶è‡¶≤‡¶ø‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶®‡¶æ ‡¶•‡¶æ‡¶ï‡¶≤‡ßá ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡¶¨‡ßá
 * - ‡¶∏‡ßç‡¶ü‡¶æ‡¶á‡¶≤‡¶∂‡ßÄ‡¶ü ‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡¶¨‡ßá
 * - JSON ‡¶•‡ßá‡¶ï‡ßá ‡¶°‡ßá‡¶ü‡¶æ ‡¶®‡¶ø‡ßü‡ßá ‡¶™‡¶™‡¶Ü‡¶™ ‡¶¶‡ßá‡¶ñ‡¶æ‡¶¨‡ßá
 * - ‡¶á‡¶â‡¶ú‡¶æ‡¶∞ ‡¶ï‡ßç‡¶≤‡ßã‡¶ú/‡¶≠‡¶ø‡¶ú‡¶ø‡¶ü ‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡ßá‡¶≤ ‡¶ï‡¶∞‡¶¨‡ßá
 */

(async function(){
  const jsonUrl = "https://raw.githubusercontent.com/newspaperreports/admin/refs/heads/main/asLife/dailyLive.json";
  const closeBtnDelay = 3000; // ‡ß© ‡¶∏‡ßá‡¶ï‡ßá‡¶®‡ßç‡¶° ‡¶™‡¶∞‡ßá ‡¶ï‡ßç‡¶≤‡ßã‡¶ú ‡¶¨‡¶æ‡¶ü‡¶® ‡¶¶‡ßá‡¶ñ‡¶æ‡¶¨‡ßá
  const autoCloseDelay = 20000; // ‡ß®‡ß¶ ‡¶∏‡ßá‡¶ï‡ßá‡¶®‡ßç‡¶° ‡¶™‡¶∞‡ßá ‡¶™‡¶™‡¶Ü‡¶™ ‡¶®‡¶ø‡¶ú‡ßá‡¶á ‡¶¨‡¶®‡ßç‡¶ß ‡¶π‡¶¨‡ßá

  // UTF-8 String ‡¶ï‡ßá Base64 ‡¶è ‡¶∞‡ßÇ‡¶™‡¶æ‡¶®‡ßç‡¶§‡¶∞ (Unicode safe)
  function utf8ToBase64(str) {
    return btoa(unescape(encodeURIComponent(str)));
  }

  // ‡ßß. CSS ‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡¶¨‡ßã ‡¶Ø‡¶¶‡¶ø ‡¶Ü‡¶ó‡ßá ‡¶≤‡ßã‡¶° ‡¶®‡¶æ ‡¶•‡¶æ‡¶ï‡ßá
  if(!document.getElementById('asLifeCSS')) {
    const link = document.createElement('link');
    link.rel = 'stylesheet';
    link.href = 'https://cdn.jsdelivr.net/gh/newspaperreports/admin@latest/asLife/todayLive.css';
    link.id = 'asLifeCSS';
    document.head.appendChild(link);
  }

  // ‡ß®. ‡¶Ø‡¶¶‡¶ø ‡¶®‡¶æ ‡¶•‡¶æ‡¶ï‡ßá ‡¶§‡¶æ‡¶π‡¶≤‡ßá #adminNotification ‡¶°‡¶ø‡¶≠ ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡ßã
  let popup = document.getElementById('adminNotification');
  if (!popup) {
    popup = document.createElement('div');
    popup.id = 'adminNotification';
    document.body.appendChild(popup);
  }

  // ‡ß©. ‡¶™‡¶™‡¶Ü‡¶™‡ßá‡¶∞ HTML ‡¶¢‡ßã‡¶ï‡¶æ‡¶ì (template)
  popup.innerHTML = `
    <div class="meta_asAdmin_live_post_area fade-in" style="display:none;">
      <div class="asAdmin_live_post_ct">
        <div class="asAdmin_live_info">
          <div id="asAdminLivePost" class="asAdmin_live_post">
            <a href="#" target="" class="asAdmin_live_aa" id="popupLink">
              <div class="asAdmin_Live_image">
                <figure>
                  <picture>
                    <source id="popupImgSrc" srcset="">
                    <img id="popupImg" class="asAdmin_live_img" alt="">
                  </picture>
                </figure>
              </div>
              <div class="asAdmin_live_headLine">
                <font class="asAdmin_Live_title" id="popupTitle"></font>
              </div>
              <button class="asAdmin_live_view_btn" type="button" id="popupBtn">
                <span></span>
              </button>
            </a>
            <button id="popupCloseBtn" class="asAdmin_post_close fade-out">
              <span>‚úñ</span>
            </button>
          </div>
        </div>
      </div>
    </div>
  `;

  // ‡¶è‡¶ñ‡¶® popup div ‡¶è‡¶∞ ‡¶≠‡¶ø‡¶§‡¶∞‡ßá‡¶∞ ‡¶Ü‡¶∏‡¶≤ notification ‡¶è‡¶≤‡¶ø‡¶Æ‡ßá‡¶®‡ßç‡¶ü‡ßá ‡¶ï‡¶æ‡¶ú ‡¶ï‡¶∞‡¶¨‡ßã
  const notifDiv = popup.querySelector('.meta_asAdmin_live_post_area');

  // ‡¶ó‡ßç‡¶≤‡ßã‡¶¨‡¶æ‡¶≤ ‡¶≠‡ßç‡¶Ø‡¶æ‡¶∞‡¶ø‡ßü‡ßá‡¶¨‡¶≤
  let currentPopupId = null;
  let enableConsoleLog = true;

  // ‡¶ï‡ßç‡¶≤‡ßã‡¶ú ‡¶¨‡¶æ‡¶ü‡¶® ‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶≤‡¶æ‡¶∞ ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶æ
  const closeBtn = popup.querySelector('#popupCloseBtn');
  closeBtn.addEventListener('click', () => {
    localStorage.setItem('popup_closed_by_user', '1');
    localStorage.setItem('popup_last_seen_id', currentPopupId);
    handleClose();
  });

  // JSON ‡¶•‡ßá‡¶ï‡ßá ‡¶°‡ßá‡¶ü‡¶æ ‡¶≤‡ßã‡¶° ‡¶è‡¶¨‡¶Ç ‡¶™‡¶™‡¶Ü‡¶™ ‡¶¶‡ßá‡¶ñ‡¶æ‡¶®‡ßã‡¶∞ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®
  async function loadNotificationData() {
    try {
      const response = await fetch(jsonUrl);
      if(!response.ok) throw new Error('Data load failed');

      const data = await response.json();

      if(data.status && data.status.toLowerCase() === 'off') {
        log('Popup status OFF. Not showing popup.');
        return;
      }

      enableConsoleLog = !(data.console && data.console.toLowerCase() === 'off');

      const identifier = `${data.link}|${data.title}|${data.image}`;
      const encodedIdentifier = utf8ToBase64(identifier);
      currentPopupId = encodedIdentifier;

      const lastSeen = localStorage.getItem('popup_last_seen_id');
      const popupClosedByUser = localStorage.getItem('popup_closed_by_user');

      if(lastSeen === encodedIdentifier && popupClosedByUser === '1') {
        log('Popup already closed by user for this content.');
        return;
      }

      showNotification(data, encodedIdentifier);
    } catch(e) {
      console.error('Notification loading error:', e);
    }
  }

  // Console log helper
  function log(msg){
    if(enableConsoleLog) console.log('üîî AdminPopup:', msg);
  }

  // ‡¶™‡¶™‡¶Ü‡¶™‡ßá ‡¶°‡ßá‡¶ü‡¶æ ‡¶¨‡¶∏‡¶æ‡¶®‡ßã ‡¶è‡¶¨‡¶Ç ‡¶¶‡ßá‡¶ñ‡¶æ‡¶®‡ßã
  function showNotification(data, encodedIdentifier) {
    // ‡¶á‡¶Æ‡ßá‡¶ú, ‡¶ü‡¶æ‡¶á‡¶ü‡ßá‡¶≤, ‡¶¨‡¶æ‡¶ü‡¶® ‡¶ü‡ßá‡¶ï‡ßç‡¶∏‡¶ü ‡¶¨‡¶∏‡¶æ‡¶®‡ßã
    popup.querySelector('#popupImg').src = data.image;
    popup.querySelector('#popupImgSrc').srcset = data.image;
    popup.querySelector('#popupTitle').textContent = data.title;
    popup.querySelector('#popupBtn span').textContent = data.buttonText;

    // ‡¶≤‡¶ø‡¶Ç‡¶ï ‡¶∏‡ßá‡¶ü ‡¶ï‡¶∞‡¶æ ‡¶è‡¶¨‡¶Ç ‡¶ï‡ßç‡¶≤‡¶ø‡¶ï ‡¶á‡¶≠‡ßá‡¶®‡ßç‡¶ü
    const link = popup.querySelector('#popupLink');
    // ‡¶™‡ßÅ‡¶∞‡¶æ‡¶®‡ßã ‡¶á‡¶≠‡ßá‡¶®‡ßç‡¶ü ‡¶∞‡¶ø‡¶Æ‡ßÅ‡¶≠ ‡¶ï‡¶∞‡¶§‡ßá ‡¶ï‡ßç‡¶≤‡ßã‡¶® ‡¶ï‡¶∞‡ßá ‡¶∞‡¶ø‡¶™‡ßç‡¶≤‡ßá‡¶∏ ‡¶ï‡¶∞‡¶õ‡¶ø
    const newLink = link.cloneNode(true);
    link.parentNode.replaceChild(newLink, link);
    newLink.href = data.link;
    newLink.target = "_blank";

    newLink.addEventListener('click', (e) => {
      e.preventDefault();
      localStorage.setItem('popup_last_seen_id', encodedIdentifier);
      localStorage.setItem('popup_closed_by_user', '1');
      window.open(data.link, '_blank');
      handleClose();
    });

    // ‡¶™‡¶™‡¶Ü‡¶™ ‡¶¶‡ßá‡¶ñ‡¶æ‡¶®‡ßã (fade-in)
    notifDiv.style.display = 'block';
    notifDiv.classList.remove('fade-out');
    void notifDiv.offsetWidth; // reflow trigger
    notifDiv.classList.add('fade-in');

    // ‡ß© ‡¶∏‡ßá‡¶ï‡ßá‡¶®‡ßç‡¶° ‡¶™‡¶∞‡ßá ‡¶ï‡ßç‡¶≤‡ßã‡¶ú ‡¶¨‡¶æ‡¶ü‡¶® ‡¶¶‡ßá‡¶ñ‡¶æ‡¶ì
    setTimeout(() => {
      closeBtn.classList.add('show');
    }, closeBtnDelay);

    // ‡ß®‡ß¶ ‡¶∏‡ßá‡¶ï‡ßá‡¶®‡ßç‡¶° ‡¶™‡¶∞‡ßá ‡¶™‡¶™‡¶Ü‡¶™ ‡¶Ö‡¶ü‡ßã ‡¶ï‡ßç‡¶≤‡ßã‡¶ú
    setTimeout(() => {
      if(notifDiv.style.display === 'block'){
        handleClose();
      }
    }, autoCloseDelay);
  }

  // fade-out ‡¶ï‡¶∞‡ßá popup ‡¶≤‡ßÅ‡¶ï‡¶æ‡¶®‡ßã
  function handleClose(){
    closeBtn.classList.remove('show');
    notifDiv.classList.remove('fade-in');
    notifDiv.classList.add('fade-out');
    setTimeout(() => {
      notifDiv.style.display = 'none';
    }, 300);
  }

  // ‡¶™‡ßá‡¶ú ‡¶≤‡ßã‡¶° ‡¶π‡¶ì‡ßü‡¶æ‡¶∞ ‡¶™‡¶∞ ‡¶°‡ßá‡¶ü‡¶æ ‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡ßã
  window.addEventListener('load', loadNotificationData);

  // ‡¶™‡ßç‡¶∞‡¶§‡¶ø ‡ß©‡ß¶ ‡¶∏‡ßá‡¶ï‡ßá‡¶®‡ßç‡¶°‡ßá ‡¶°‡ßá‡¶ü‡¶æ ‡¶∞‡¶ø‡¶´‡ßç‡¶∞‡ßá‡¶∂ ‡¶ï‡¶∞‡ßã
  setInterval(loadNotificationData, 30000);

})();
