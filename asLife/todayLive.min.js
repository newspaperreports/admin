// === todayLive.js (main logic with full comments) ===

// ‚úÖ JSON ‡¶´‡¶æ‡¶á‡¶≤‡ßá‡¶∞ ‡¶≤‡ßã‡¶ï‡ßá‡¶∂‡¶® (GitHub ‡¶•‡ßá‡¶ï‡ßá live JSON load ‡¶π‡¶¨‡ßá)
const jsonUrl = "https://raw.githubusercontent.com/newspaperreports/admin/main/asLife/todayLive.json";

// üïí ‡¶ï‡ßç‡¶≤‡ßã‡¶ú ‡¶¨‡¶æ‡¶ü‡¶® ‡¶ï‡¶§ ‡¶∏‡¶Æ‡ßü ‡¶™‡¶∞ ‡¶¶‡ßá‡¶ñ‡¶æ‡¶®‡ßã ‡¶π‡¶¨‡ßá (‡¶Æ‡¶ø‡¶≤‡¶ø‡¶∏‡ßá‡¶ï‡ßá‡¶®‡ßç‡¶°‡ßá)
const closeBtnDelay = 3000; // ‡ß© ‡¶∏‡ßá‡¶ï‡ßá‡¶®‡ßç‡¶° ‡¶™‡¶∞ ‡¶ï‡ßç‡¶≤‡ßã‡¶ú ‡¶¨‡¶æ‡¶ü‡¶® ‡¶∂‡ßã

// üïì ‡¶Ö‡¶ü‡ßã ‡¶ï‡ßç‡¶≤‡ßã‡¶ú ‡¶ü‡¶æ‡¶á‡¶Æ‡¶æ‡¶∞ (‡¶™‡¶™‡¶Ü‡¶™ ‡¶ï‡¶§ ‡¶∏‡ßá‡¶ï‡ßá‡¶®‡ßç‡¶° ‡¶™‡¶∞‡ßá ‡¶®‡¶ø‡¶ú‡ßá ‡¶•‡ßá‡¶ï‡ßá ‡¶¨‡¶®‡ßç‡¶ß ‡¶π‡¶¨‡ßá)
const autoCloseDelay = 20000; // ‡ß®‡ß¶ ‡¶∏‡ßá‡¶ï‡ßá‡¶®‡ßç‡¶° ‡¶™‡¶∞‡ßá ‡¶™‡¶™‡¶Ü‡¶™ ‡¶Ö‡¶ü‡ßã ‡¶¨‡¶®‡ßç‡¶ß

// ‚úÖ Base64 encode ‡¶ï‡¶∞‡¶æ‡¶∞ function (Unicode compatible)
function utf8ToBase64(str) {
  return btoa(unescape(encodeURIComponent(str)));
}

// ‚úÖ ‡¶≤‡¶æ‡¶á‡¶∏‡ßá‡¶®‡ßç‡¶∏ ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶°‡ßã‡¶Æ‡ßá‡¶á‡¶® ‡¶™‡¶æ‡¶ì‡ßü‡¶æ
function getCurrentDomain() {
  return window.location.hostname.replace('www.', '');
}

// ‚úÖ ‡¶á‡¶â‡¶ú‡¶æ‡¶∞ ‡¶á‡¶®‡¶´‡ßã ‡¶∏‡¶Ç‡¶ó‡ßç‡¶∞‡¶π ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ö‡ßá‡¶∑‡ßç‡¶ü‡¶æ (IP, ‡¶¨‡ßç‡¶∞‡¶æ‡¶â‡¶ú‡¶æ‡¶∞ info ‡¶ï‡ßç‡¶≤‡¶æ‡ßü‡ßá‡¶®‡ßç‡¶ü ‡¶≤‡ßá‡¶≠‡ßá‡¶≤‡ßá ‡¶∏‡ßÄ‡¶Æ‡¶ø‡¶§)
function collectClientInfo() {
  return {
    userAgent: navigator.userAgent,
    language: navigator.language,
    platform: navigator.platform,
    screen: `${screen.width}x${screen.height}`,
    domain: getCurrentDomain(),
    time: new Date().toString()
  };
}

// ‚úÖ JSON ‡¶•‡ßá‡¶ï‡ßá ‡¶™‡¶™‡¶Ü‡¶™ ‡¶°‡ßá‡¶ü‡¶æ ‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡¶æ
async function loadNotificationData() {
  try {
    const response = await fetch(jsonUrl);
    if (!response.ok) throw new Error("‚ùå ‡¶°‡ßá‡¶ü‡¶æ ‡¶≤‡ßã‡¶° ‡¶π‡ßü‡¶®‡¶ø");

    const data = await response.json();

    // üîê ‡¶≤‡¶æ‡¶á‡¶∏‡ßá‡¶®‡ßç‡¶∏ ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡¶æ
    const currentDomain = getCurrentDomain();
    if (!data.allowedDomains.includes(currentDomain)) {
      console.warn("‚õî ‡¶≤‡¶æ‡¶á‡¶∏‡ßá‡¶®‡ßç‡¶∏ ‡¶≠‡ßç‡¶Ø‡¶æ‡¶≤‡¶ø‡¶° ‡¶®‡ßü, ‡¶è‡¶á ‡¶°‡ßã‡¶Æ‡ßá‡¶á‡¶® ‡¶Ö‡¶®‡ßÅ‡¶Æ‡ßã‡¶¶‡¶ø‡¶§ ‡¶®‡¶æ:", currentDomain);
      sendLicenseViolation(data.notification, data.licenseKey, currentDomain);
      return; // ‡¶™‡¶™‡¶Ü‡¶™ ‡¶Ü‡¶∞ ‡¶¶‡ßá‡¶ñ‡¶æ‡¶¨‡ßã ‡¶®‡¶æ
    }

    // üîç ‡¶ï‡¶®‡¶∏‡ßã‡¶≤ ‡¶≤‡¶ó ‡¶Ö‡¶®/‡¶Ö‡¶´
    const enableConsoleLog = !(data.console && data.console.toLowerCase() === "off");

    const identifier = `${data.link}|${data.title}|${data.image}`;
    const encodedIdentifier = utf8ToBase64(identifier);
    const lastSeenKey = "popup_last_seen_id";
    const popupClosedByUser = localStorage.getItem("popup_closed_by_user");
    const lastSeen = localStorage.getItem(lastSeenKey);

    const popup = document.getElementById("adminNotification");

    // üîÑ ‡¶Ü‡¶ó‡ßá‡¶∞‡¶ü‡¶æ ‡¶ï‡ßç‡¶≤‡ßã‡¶ú ‡¶®‡¶æ ‡¶ï‡¶∞‡ßá ‡¶®‡¶§‡ßÅ‡¶® ‡¶è‡¶≤‡ßá ‡¶Ü‡¶™‡¶°‡ßá‡¶ü
    if (popup && popup.style.display === "block" && lastSeen !== encodedIdentifier) {
      handleCloseOrVisit(() => {
        showNotification(data, encodedIdentifier, lastSeenKey);
      });
      return;
    }

    // üõë ‡¶è‡¶ï‡¶á popup ‡¶Ü‡¶¨‡¶æ‡¶∞ ‡¶®‡¶æ ‡¶¶‡ßá‡¶ñ‡¶æ‡¶®‡ßã
    if (lastSeen === encodedIdentifier && popupClosedByUser === "1") {
      if (enableConsoleLog) console.log("‚ö†Ô∏è ‡¶Ü‡¶ó‡ßá‡¶∞ ‡¶ï‡¶®‡¶ü‡ßá‡¶®‡ßç‡¶ü ‡¶ï‡ßç‡¶≤‡ßã‡¶ú ‡¶ï‡¶∞‡¶æ, ‡¶Ü‡¶¨‡¶æ‡¶∞ ‡¶¶‡ßá‡¶ñ‡¶æ‡¶®‡ßã ‡¶π‡¶ö‡ßç‡¶õ‡ßá ‡¶®‡¶æ");
      return;
    }

    showNotification(data, encodedIdentifier, lastSeenKey);
  } catch (err) {
    console.error("‚ùå Notification loading error:", err);
  }
}

// ‚úÖ ‡¶™‡¶™‡¶Ü‡¶™ ‡¶¶‡ßá‡¶ñ‡¶æ‡¶®‡ßã
function showNotification(data, encodedIdentifier, lastSeenKey) {
  const popup = document.getElementById("adminNotification");
  document.getElementById("popupImg").src = data.image;
  document.getElementById("popupTitle").textContent = data.title;
  document.getElementById("popupBtnText").textContent = data.buttonText;

  // ‡¶≤‡¶ø‡¶Ç‡¶ï ‡¶ï‡ßç‡¶≤‡¶ø‡¶ï ‡¶ï‡¶∞‡¶≤‡ßá
  const linkEl = document.getElementById("popupLink");
  linkEl.href = data.link;
  linkEl.onclick = (e) => {
    e.preventDefault();
    localStorage.setItem(lastSeenKey, encodedIdentifier);
    localStorage.setItem("popup_closed_by_user", "1");
    window.open(data.link, "_blank");
    handleCloseOrVisit();
  };

  popup.style.display = "block";
  popup.classList.remove("fade-out");
  popup.classList.add("fade-in");

  // ‡¶ï‡ßç‡¶≤‡ßã‡¶ú ‡¶¨‡¶æ‡¶ü‡¶® show
  setTimeout(() => {
    document.getElementById("popupCloseBtn").classList.add("show");
  }, closeBtnDelay);

  // ‡¶Ö‡¶ü‡ßã ‡¶ï‡ßç‡¶≤‡ßã‡¶ú
  setTimeout(() => {
    if (popup.style.display === "block") handleCloseOrVisit();
  }, autoCloseDelay);
}

// ‚ùå popup fade ‡¶ï‡¶∞‡ßá ‡¶¨‡¶®‡ßç‡¶ß ‡¶ï‡¶∞‡¶æ
function handleCloseOrVisit(callback) {
  const popup = document.getElementById("adminNotification");
  document.getElementById("popupCloseBtn").classList.remove("show");
  popup.classList.remove("fade-in");
  popup.classList.add("fade-out");
  setTimeout(() => {
    popup.style.display = "none";
    if (typeof callback === "function") callback();
  }, 300);
}

// üö® ‡¶≤‡¶æ‡¶á‡¶∏‡ßá‡¶®‡ßç‡¶∏ ‡¶≠‡¶æ‡ßü‡ßã‡¶≤‡ßá‡¶∂‡¶® ‡¶π‡¶≤‡ßá ‡¶∞‡¶ø‡¶™‡ßã‡¶∞‡ßç‡¶ü ‡¶á‡¶Æ‡ßá‡¶á‡¶≤ ‡¶∏‡¶æ‡¶∞‡ßç‡¶≠‡¶æ‡¶∞‡ßá ‡¶™‡¶æ‡¶†‡¶æ‡¶®‡ßã ‡¶π‡¶¨‡ßá
function sendLicenseViolation(email, licenseKey, domain) {
  const info = collectClientInfo();
  fetch("https://your-server.com/report-license", {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({
      to: email,
      subject: "License Violation Alert",
      message: `Unauthorized domain: ${domain}\nLicense: ${licenseKey}\nClient Info: ${JSON.stringify(info, null, 2)}`
    })
  });
}

// ‚úÖ ‡¶∏‡ßç‡¶ï‡ßç‡¶∞‡¶ø‡¶™‡ßç‡¶ü ‡¶ö‡¶æ‡¶≤‡ßÅ ‡¶π‡¶≤‡ßá ‡¶∂‡ßÅ‡¶∞‡ßÅ‡¶§‡ßá
window.onload = function () {
  document.getElementById("popupCloseBtn").onclick = function () {
    localStorage.setItem("popup_closed_by_user", "1");
    handleCloseOrVisit();
  };
  loadNotificationData();
  setInterval(loadNotificationData, 30000); // ‡¶™‡ßç‡¶∞‡¶§‡¶ø ‡ß©‡ß¶ ‡¶∏‡ßá‡¶ï‡ßá‡¶®‡ßç‡¶° ‡¶™‡¶∞
};
