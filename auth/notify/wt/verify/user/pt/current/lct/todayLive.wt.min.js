const el = document.getElementById("adminNotification");
if (el) {
  console.log("‚úÖ Element found:", el);
} else {
  console.warn("‚ùå Element not found!");
}

// ‚úÖ Pop-up Notification Script with License & Domain Validation

// üîó JSON Configuration URL (where your popup data is hosted)
const jsonUrl = "https://raw.githubusercontent.com/newspaperreports/admin@latest/auth/notify/wt/verify/user/pt/current/lct/todayLive.wt.json";

// üîó HTML Layout URL (popup structure stored in index.html)
const htmlUrl = "https://cdn.jsdelivr.net/gh/newspaperreports/admin@main/auth/notify/wt/verify/user/pt/current/lct/index.html";

// üîó CSS File URL (your design file)
const cssUrl = "https://cdn.jsdelivr.net/gh/newspaperreports/admin@latest/auth/notify/wt/verify/user/pt/current/lct/todayLive.wt.css";

// ‚è±Ô∏è Popup close button delay (milliseconds)
const closeBtnDelay = 3000;

// ‚è±Ô∏è Auto close popup after delay (milliseconds)
const autoCloseDelay = 20000;

// üîê Encode popup identifier to base64 for tracking
function utf8ToBase64(str) {
  return btoa(unescape(encodeURIComponent(str)));
}

// ‚úÖ Load and inject the popup's HTML into current page body
async function loadPopupHTML(retry = 0) {
  try {
    const response = await fetch(htmlUrl);
    const htmlText = await response.text();

    const wrapper = document.createElement("div");
    wrapper.innerHTML = htmlText.trim();

    // ‚úÖ ‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡¶Ü‡¶Æ‡¶∞‡¶æ HTML ‡¶á‡¶®‡¶ú‡ßá‡¶ï‡ßç‡¶ü ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶Ü‡¶ó‡ßá ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡¶ø ‡¶™‡ßÅ‡¶∞‡ßã‡¶®‡ßã‡¶ü‡¶æ ‡¶Ü‡¶õ‡ßá ‡¶ï‡¶ø‡¶®‡¶æ
    if (!document.getElementById("adminNotification")) {
      while (wrapper.firstChild) {
        document.body.appendChild(wrapper.firstChild);
      }
      console.log("‚úÖ Popup HTML loaded and injected.");
    } else {
      console.log("‚ÑπÔ∏è Popup HTML already present.");
    }

    // üîÑ ‡¶á‡¶®‡¶ú‡ßá‡¶ï‡¶∂‡¶® ‡¶∏‡¶´‡¶≤ ‡¶π‡ßü‡ßá‡¶õ‡ßá ‡¶ï‡¶ø‡¶®‡¶æ ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡¶æ (DOM-‡¶è ‡¶Ü‡¶õ‡ßá ‡¶ï‡¶ø‡¶®‡¶æ)
    if (!document.getElementById("adminNotification") && retry < 3) {
      // ‡¶Ü‡¶¨‡¶æ‡¶∞ ‡¶ö‡ßá‡¶∑‡ßç‡¶ü‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶® (‡¶´‡ßá‡¶ö ‡¶≤‡ßá‡¶ü ‡¶π‡¶≤‡ßá ‡¶¨‡¶æ DOM ‡¶∞‡ßá‡¶°‡¶ø ‡¶®‡¶æ ‡¶π‡¶≤‡ßá)
      setTimeout(() => loadPopupHTML(retry + 1), 500);
    } else if (!document.getElementById("adminNotification")) {
      console.error("‚ùå Popup HTML inject failed! #adminNotification not found after retries.");
    }
  } catch (error) {
    console.error("‚ùå Popup HTML load failed:", error);
  }
}

// ‚úÖ Dynamically inject the external CSS file
function injectPopupCSS() {
  // ‡¶Ü‡¶ó‡ßá‡¶∞ CSS ‡¶•‡ßá‡¶ï‡ßá ‡¶°‡¶æ‡¶¨‡¶≤ ‡¶≤‡ßã‡¶° ‡¶Ü‡¶ü‡¶ï‡¶æ‡¶§‡ßá ‡¶ö‡ßá‡¶ï
  if (!document.querySelector(`link[href="${cssUrl}"]`)) {
    const link = document.createElement("link");
    link.rel = "stylesheet";
    link.href = cssUrl;
    document.head.appendChild(link);
  }
}

// ‚úÖ Function: Validate license key and current domain
function isLicenseValid(data) {
  const currentDomain = window.location.hostname.replace('www.', '');
  return (
    Array.isArray(data.allowedDomains) &&
    data.allowedDomains.includes(currentDomain) &&
    data.licenseKey === "NewspaperReports-AS - Life Official"
  );
}

// üö® Report misuse via mailto link if license validation fails
function reportLicenseViolation(data) {
  const adminEmail = data.notification || "asupdatemedia518@gmail.com";
  const subject = encodeURIComponent("üö® ‡¶≤‡¶æ‡¶á‡¶∏‡ßá‡¶®‡ßç‡¶∏ ‡¶õ‡¶æ‡¶°‡¶º‡¶æ PopUp ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞‡ßá‡¶∞ ‡¶ö‡ßá‡¶∑‡ßç‡¶ü‡¶æ");
  const body = encodeURIComponent(
    `‚ùå ‡¶≤‡¶æ‡¶á‡¶∏‡ßá‡¶®‡ßç‡¶∏ ‡¶ö‡ßá‡¶ï ‡¶¨‡ßç‡¶Ø‡¶∞‡ßç‡¶•!\n\nüåê Current Domain: ${window.location.hostname}\nüïì Time: ${new Date().toLocaleString()}\n\nJSON Info:\n${JSON.stringify(data, null, 2)}`
  );
  window.open(`mailto:${adminEmail}?subject=${subject}&body=${body}`, "_blank");
}

// üóÉÔ∏è Variable to track popup ID (used in localStorage)
let currentPopupId = null;

// üöÄ DOM Ready: Load HTML/CSS first, then fetch data
document.addEventListener("DOMContentLoaded", async () => {
  await loadPopupHTML();        // ‚úÖ Popup layout ‡¶≤‡ßã‡¶°
  injectPopupCSS();             // ‚úÖ CSS ‡¶Ø‡ßÅ‡¶ï‡ßç‡¶§

  // DOM-‡¶è popup ‡¶è‡¶≤‡ßá‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶≤‡ßã‡¶° ‡¶®‡¶æ ‡¶π‡¶≤‡ßá, ‡ßß ‡¶∏‡ßá‡¶ï‡ßá‡¶®‡ßç‡¶° ‡¶™‡¶∞‡ßá ‡¶Ü‡¶¨‡¶æ‡¶∞ ‡¶ö‡ßá‡¶∑‡ßç‡¶ü‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®
  function waitAndLoadNotificationData(attempt = 0) {
    const popup = document.getElementById("adminNotification");
    if (popup) {
      loadNotificationData();
    } else if (attempt < 5) {
      setTimeout(() => waitAndLoadNotificationData(attempt + 1), 1000);
    } else {
      console.error("‚ùå Popup container (adminNotification) DOM-‡¶è ‡¶™‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ ‡¶Ø‡¶æ‡¶Ø‡¶º‡¶®‡¶ø!");
    }
  }
  waitAndLoadNotificationData();

  // ‚úã Close button action
  document.addEventListener("click", (e) => {
    if (e.target.id === "popupCloseBtn" || e.target.closest("#popupCloseBtn")) {
      localStorage.setItem("popup_closed_by_user", "1");
      localStorage.setItem("popup_last_seen_id", currentPopupId);
      handleCloseOrVisit();
    }
  });

  // üîÅ Auto-refresh every 30 seconds
  setInterval(loadNotificationData, 30000);
});

// üì• Main function to fetch popup data and control display
async function loadNotificationData() {
  try {
    const popup = document.getElementById("adminNotification");
    if (!popup) {
      console.warn("‚ö†Ô∏è Popup container (adminNotification) ‡¶™‡¶æ‡¶ì‡¶Ø‡¶º‡¶æ ‡¶Ø‡¶æ‡¶Ø‡¶º‡¶®‡¶ø ‚Äì loadPopupHTML ‡¶Ü‡¶¨‡¶æ‡¶∞ ‡¶ï‡¶≤ ‡¶ï‡¶∞‡ßÅ‡¶®");
      await loadPopupHTML();
      return;
    }

    const response = await fetch(jsonUrl, { cache: "no-cache" });
    if (!response.ok) throw new Error("‚ùå JSON ‡¶°‡ßá‡¶ü‡¶æ ‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡¶æ ‡¶Ø‡¶æ‡¶Ø‡¶º‡¶®‡¶ø");
    const data = await response.json();

    if (!isLicenseValid(data)) {
      console.warn("‚ùå ‡¶≤‡¶æ‡¶á‡¶∏‡ßá‡¶®‡ßç‡¶∏ ‡¶ö‡ßá‡¶ï ‡¶¨‡ßç‡¶Ø‡¶∞‡ßç‡¶•");
      reportLicenseViolation(data);
      return;
    }

    if (data.status?.toLowerCase() === "off") return;

    const enableConsole = !(data.console?.toLowerCase() === "off");

    const identifier = `${data.title}|${data.image}|${data.buttonText}|${data.link}`;
    const encodedIdentifier = utf8ToBase64(identifier);
    currentPopupId = encodedIdentifier;

    const lastSeen = localStorage.getItem("popup_last_seen_id");
    const popupClosedByUser = localStorage.getItem("popup_closed_by_user");

    if (popup.style.display === "block") {
      if (lastSeen !== encodedIdentifier) {
        handleCloseOrVisit(() => {
          showNotificationFromJSON(data, encodedIdentifier);
        });
      }
      return;
    }

    if (lastSeen === encodedIdentifier && popupClosedByUser === "1") return;

    showNotificationFromJSON(data, encodedIdentifier);
    if (enableConsole) console.log("‚úÖ Popup data loaded:", data);

  } catch (e) {
    console.error("‚ùå Notification loading error:", e);
  }
}

// üì§ Render the popup using the fetched JSON data
function showNotificationFromJSON(data, encodedIdentifier) {
  const popup = document.getElementById("adminNotification");
  if (!popup) {
    console.error("‚ùå Popup container (adminNotification) DOM-‡¶è ‡¶®‡ßá‡¶á!");
    return;
  }

  // ‡¶®‡¶ø‡¶ö‡ßá‡¶∞ ‡¶∏‡¶¨ ‡¶è‡¶≤‡¶ø‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶Ü‡¶õ‡ßá ‡¶ï‡¶ø‡¶®‡¶æ ‡¶ö‡ßá‡¶ï, ‡¶®‡¶æ ‡¶•‡¶æ‡¶ï‡¶≤‡ßá error ‡¶¶‡ßá‡¶ñ‡¶æ‡¶®
  const img = document.getElementById("popupImg");
  const imgSrc = document.getElementById("popupImgSrc");
  const title = document.getElementById("popupTitle");
  const btn = document.getElementById("popupBtn");
  const linkEl = document.getElementById("popupLink");

  if (!img || !imgSrc || !title || !btn || !linkEl) {
    console.error("‚ùå Popup HTML structure mismatch!");
    return;
  }

  img.src = data.image;
  imgSrc.srcset = data.image;
  title.textContent = data.title;
  btn.querySelector("span").textContent = data.buttonText;

  const newLinkEl = linkEl.cloneNode(true);
  linkEl.parentNode.replaceChild(newLinkEl, linkEl);
  newLinkEl.href = data.link;

  newLinkEl.addEventListener("click", (e) => {
    e.preventDefault();
    localStorage.setItem("popup_last_seen_id", encodedIdentifier);
    localStorage.setItem("popup_closed_by_user", "1");
    window.open(data.link, "_blank");
    handleCloseOrVisit();
  });

  popup.style.display = "block";
  popup.classList.remove("fade-out");
  void popup.offsetWidth;
  popup.classList.add("fade-in");

  setTimeout(() => {
    const closeBtn = document.getElementById("popupCloseBtn");
    if (closeBtn) closeBtn.classList.add("show");
  }, closeBtnDelay);

  setTimeout(() => {
    if (popup.style.display === "block") {
      handleCloseOrVisit();
    }
  }, autoCloseDelay);
}

// ‚ùå Handle closing popup animation and cleanup
function handleCloseOrVisit(callback) {
  const popup = document.getElementById("adminNotification");
  if (!popup) return;

  const closeBtn = document.getElementById("popupCloseBtn");
  if (closeBtn) closeBtn.classList.remove("show");

  popup.classList.remove("fade-in");
  popup.classList.add("fade-out");

  setTimeout(() => {
    popup.style.display = "none";
    if (typeof callback === "function") callback();
  }, 300);
}
